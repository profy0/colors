Сопроводительная документация к приложению colors.

Приложение разрабатывалось на Qt Creator. Для разработки использовались стандартные библиотеки и классы Qt, такие как QPainter, QMessageBox, QtWidgets, QMainWindow, QColor и тд.
Для отображения цвета использовался класс QPainter (функция paintEvent(*event)) и QPolygon. Для создания градиента использовался класс QLinearGradient. 
Для пересчета моделей RGB, HSV, HSL, CMYK использовался стандартный класс Qt - QColor. При пересчете применялись функции setRGB(), setCMYK(), setHSV(), setHLS() и другие. 
Для пересчета моделей XYZ и LAB были написаны функции пересчета при помощи формул, такие как XYZtoRGB(), RGBtoXYZ(), LABtoXYZ() и тд. Для отображения значений цветовых моделей, 
а так же возможности ввода пользователем новых значений цветовых моделей использовался стандартный класс QLineEdit, который позволял как считывать данные так и выводить их. 
Для предотвращения ввода пользователем ошибочных данных был использовались валидаторы и регулярные выражения. Для плавного изменения цвета, был использован стандартный диалог Qt - QColorDialog,
который позволяет как выбирать цвет на палитре, так и плавно изменять его при помощи ползунков. Так же пользователь может сам выбирать какие цветовые модели он хочет видеть, это было реализовано
с помощью класса QCheckBox. Сами цветовые модели находились в layout, который позволял разместить их ровно и изменять их положение относительно друг друга. При ошибках перевода выводилось ненавязчивое
уведомление о том, что произошли ошибки перевода. Для реализации данного уведомления использовался класс QLabel. Так же все значения вводятся/выводятся с точностью до 3 знаков(реализовано с помощью QString::number()).


При разработке приложения никаких проблем не возникало.